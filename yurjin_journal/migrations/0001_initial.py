# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-04-04 07:00
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('board_code', models.CharField(max_length=3, unique=True, verbose_name='Код')),
                ('board_name', models.CharField(max_length=25, verbose_name='Название')),
                ('board_description', models.CharField(blank=True, max_length=200, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Тип питания',
                'verbose_name_plural': 'Типы питания',
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_num', models.IntegerField(unique_for_month='contract_date', verbose_name='Номер договора')),
                ('contract_date', models.DateField(blank=True, null=True, verbose_name='Дата договора')),
                ('tour_begin_date', models.DateField(blank=True, verbose_name='Дата начала тура')),
                ('tour_finish_date', models.DateField(blank=True, verbose_name='Дата окончания тура')),
                ('contract_sum', models.DecimalField(decimal_places=2, default=0, max_digits=8, null=True, verbose_name='Сумма контракта')),
                ('hotel_name', models.CharField(blank=True, max_length=200, verbose_name='Название отеля')),
                ('hotel_begin_date', models.DateField(blank=True, null=True, verbose_name='Дата въезда в отель')),
                ('hotel_finish_date', models.DateField(blank=True, null=True, verbose_name='Дата выезда из отеля')),
                ('transfer', models.BooleanField(verbose_name='Включена перевозка наземным транспортом')),
                ('excursion', models.BooleanField(verbose_name='Включена экскурсионная программа')),
                ('russian_guide', models.BooleanField(verbose_name='Включена встреча и проводы с русскоговорящим гидом')),
                ('visa_support', models.BooleanField(verbose_name='Включена визовая поддержка')),
                ('medical_insurance', models.BooleanField(verbose_name='Включена медицинская страховка')),
                ('non_departure_insurance', models.BooleanField(verbose_name='Включена страховка от невыезда')),
                ('doc_get_date', models.DateField(blank=True, null=True, verbose_name='Дата получения документов клиентом')),
                ('board', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='yurjin_journal.Board', verbose_name='Тип питания')),
            ],
            options={
                'verbose_name': 'Договор',
                'verbose_name_plural': 'Договоры',
                'ordering': ('-contract_date',),
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=200, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
                'ordering': ('country_name',),
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=200, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=200, verbose_name='Имя')),
                ('mid_name', models.CharField(max_length=200, verbose_name='Отчество')),
                ('full_name_r', models.CharField(blank=True, max_length=200, verbose_name='ФИО в родительном падеже')),
            ],
            options={
                'verbose_name': 'Менеджер',
                'verbose_name_plural': 'Менеджеры',
                'ordering': ('last_name', 'first_name', 'mid_name'),
            },
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('office_name', models.CharField(max_length=200, verbose_name='Наименование')),
                ('office_adddress', models.CharField(max_length=200, verbose_name='Адрес')),
                ('office_city', models.CharField(max_length=50, verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Офис',
                'verbose_name_plural': 'Офисы',
                'ordering': ('tour_agency', 'office_name'),
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата внесения')),
                ('payment_sum', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Сумма платежа')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='yurjin_journal.Contract', verbose_name='Договор')),
                ('manager', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, to='yurjin_journal.Manager', verbose_name='Менеджер')),
                ('office', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, to='yurjin_journal.Office', verbose_name='Офис')),
            ],
            options={
                'verbose_name': 'Платеж',
                'verbose_name_plural': 'Платежи',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method_name', models.CharField(max_length=200, verbose_name='Название')),
                ('method_full_name', models.CharField(max_length=200, verbose_name='Полное наименование')),
            ],
            options={
                'verbose_name': 'Форма оплаты',
                'verbose_name_plural': 'Формы оплаты',
            },
        ),
        migrations.CreateModel(
            name='Resort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resort_name', models.CharField(max_length=200, verbose_name='Название')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='yurjin_journal.Country', verbose_name='Страна')),
            ],
            options={
                'verbose_name': 'Курорт',
                'verbose_name_plural': 'Курорты',
                'ordering': ('country', 'resort_name'),
            },
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_type_name', models.CharField(max_length=50, unique=True, verbose_name='Название')),
                ('room_type_description', models.CharField(blank=True, max_length=200, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Тип номера',
                'verbose_name_plural': 'Типы номеров',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_name', models.CharField(max_length=50, unique=True)),
                ('status_full_name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Статус',
                'verbose_name_plural': 'Статусы',
            },
        ),
        migrations.CreateModel(
            name='TourAgency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('full_name', models.CharField(blank=True, max_length=200, verbose_name='Полное наименование')),
                ('short_name', models.CharField(blank=True, max_length=200, verbose_name='Краткое наименование')),
                ('fact_address', models.CharField(blank=True, max_length=200, verbose_name='Место нахождения')),
                ('post_address', models.CharField(blank=True, max_length=200, verbose_name='Почтовый адрес')),
                ('inn', models.DecimalField(blank=True, decimal_places=0, max_digits=12, null=True, verbose_name='ИНН')),
                ('kpp', models.DecimalField(blank=True, decimal_places=0, max_digits=9, null=True, verbose_name='КПП')),
                ('ogrn', models.DecimalField(blank=True, decimal_places=0, max_digits=13, null=True, verbose_name='ОГРН')),
                ('account', models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True, verbose_name='Расчетный счет')),
                ('corr_account', models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True, verbose_name='Корр. счет')),
                ('phone', models.CharField(blank=True, max_length=200, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='e-mail')),
                ('director', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='yurjin_journal.Manager', verbose_name='Директор')),
            ],
            options={
                'verbose_name': 'Турагентство',
                'verbose_name_plural': 'Турагентства',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Tourist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=200, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=200, verbose_name='Имя')),
                ('mid_name', models.CharField(max_length=200, verbose_name='Отчество')),
                ('full_name_r', models.CharField(blank=True, max_length=200, verbose_name='ФИО в родительном падеже')),
                ('birthdate', models.DateField(verbose_name='Дата рождения')),
                ('passport_num', models.CharField(max_length=200, verbose_name='Номер паспорта РФ')),
                ('passport_date', models.DateField(verbose_name='Дата выдачи паспорта РФ')),
                ('passport_issued_by', models.CharField(max_length=50, verbose_name='Кем выдан паспорт РФ')),
                ('international_passport', models.CharField(max_length=200, verbose_name='Загранпаспорт')),
                ('international_name', models.CharField(max_length=200, verbose_name='Имя как в загранпаспорте')),
                ('international_passport_date_of_expiry', models.DateField(verbose_name='Срок действия загранпаспорта')),
                ('phone', models.CharField(blank=True, max_length=50, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='e-mail')),
                ('address', models.CharField(blank=True, max_length=200, verbose_name='Адрес')),
                ('office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='yurjin_journal.Office', verbose_name='Офис')),
            ],
            options={
                'verbose_name': 'Турист',
                'verbose_name_plural': 'Туристы',
                'ordering': ('last_name', 'first_name', 'mid_name'),
            },
        ),
        migrations.CreateModel(
            name='TourOperator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('full_name', models.CharField(blank=True, max_length=200, verbose_name='Полное наименование')),
                ('short_name', models.CharField(blank=True, max_length=200, verbose_name='Краткое наименование')),
                ('fact_address', models.CharField(blank=True, max_length=200, verbose_name='Место нахождения')),
                ('post_address', models.CharField(blank=True, max_length=200, verbose_name='Почтовый адрес')),
                ('inn', models.DecimalField(blank=True, decimal_places=0, max_digits=12, null=True, verbose_name='ИНН')),
                ('kpp', models.DecimalField(blank=True, decimal_places=0, max_digits=9, null=True, verbose_name='КПП')),
                ('ogrn', models.DecimalField(blank=True, decimal_places=0, max_digits=13, null=True, verbose_name='ОГРН')),
                ('account', models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True, verbose_name='Расчетный счет')),
                ('corr_account', models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True, verbose_name='Корр. счет')),
                ('phone', models.CharField(blank=True, max_length=200, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='e-mail')),
                ('registry_num', models.CharField(max_length=50, verbose_name='Реестровый номер')),
                ('www_address', models.CharField(max_length=50, verbose_name='Адрес сайта в сети "Интернет"')),
                ('tourpom_member', models.BooleanField(verbose_name='Является членом ассоциации  "ТУРПОМОЩЬ"')),
            ],
            options={
                'verbose_name': 'Туроператор',
                'verbose_name_plural': 'Туроператоры',
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='payment',
            name='payment_method',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='yurjin_journal.PaymentMethod', verbose_name='Форма оплаты'),
        ),
        migrations.AddField(
            model_name='office',
            name='tour_agency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='yurjin_journal.TourAgency'),
        ),
        migrations.AddField(
            model_name='manager',
            name='office',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='yurjin_journal.Office', verbose_name='Офис'),
        ),
        migrations.AddField(
            model_name='manager',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contract',
            name='client',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='yurjin_journal.Tourist', verbose_name='Клиент'),
        ),
        migrations.AddField(
            model_name='contract',
            name='manager',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='yurjin_journal.Manager', verbose_name='Менеджер'),
        ),
        migrations.AddField(
            model_name='contract',
            name='office',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='yurjin_journal.Office', verbose_name='Офис'),
        ),
        migrations.AddField(
            model_name='contract',
            name='resort',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='yurjin_journal.Resort', verbose_name='Курорт'),
        ),
        migrations.AddField(
            model_name='contract',
            name='room_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='yurjin_journal.RoomType', verbose_name='Тип номера'),
        ),
        migrations.AddField(
            model_name='contract',
            name='signatory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='contract_signatory', to='yurjin_journal.Manager', verbose_name='Подписант'),
        ),
        migrations.AddField(
            model_name='contract',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='yurjin_journal.Status', verbose_name='Статус'),
        ),
        migrations.AddField(
            model_name='contract',
            name='tour_operator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='yurjin_journal.TourOperator', verbose_name='Туроператор'),
        ),
        migrations.AddField(
            model_name='contract',
            name='tourist_list',
            field=models.ManyToManyField(blank=True, related_name='tourist_list', to='yurjin_journal.Tourist', verbose_name='Список туристов'),
        ),
        migrations.AlterUniqueTogether(
            name='tourist',
            unique_together=set([('last_name', 'first_name', 'mid_name', 'passport_num', 'passport_date')]),
        ),
        migrations.AlterUniqueTogether(
            name='resort',
            unique_together=set([('country', 'resort_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='office',
            unique_together=set([('tour_agency', 'office_name', 'office_city')]),
        ),
    ]
